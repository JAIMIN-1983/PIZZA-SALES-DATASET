CREATE DATABASE PIZZA_SALES;
USE PIZZA_SALES;

CREATE TABLE IF NOT EXISTS PIZZA (
PIZZA_ID INT,
ORDER_ID INT,
PIZZA_NAME_ID VARCHAR(100),
QUANTITY INT,
ORDER_DATE VARCHAR(100),
ORDER_TIME TIME,
UNIT_PRICE DECIMAL(10,4),
TOTAL_PRICE DECIMAL(10,4),
PIZZA_SIZE VARCHAR(10),
PIZZA_CATEGORY VARCHAR(50),
PIZZA_INGREDIENTS VARCHAR(1000),
PIZZA_NAME VARCHAR(4000));

LOAD DATA INFILE
'E:/pizza_sales.csv'
INTO TABLE PIZZA
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

SELECT * FROM PIZZA;
DROP TABLE PIZZA;

/* Q-1 Total Revenue */
SELECT SUM(TOTAL_PRICE) AS TOTAL_REVENUE FROM PIZZA; /* Answer is ok */
SELECT SUM(TOTAL_PRICE) AS TOTAL_REVENUE FROM PIZZA;
/* Q-2  Average Order Value */
SELECT (SUM(TOTAL_PRICE)/COUNT(DISTINCT ORDER_ID)) AS AVERAGE_ORDER_VALUE FROM PIZZA; /* Answer is ok */
SELECT (SUM(TOTAL_PRICE) / COUNT(DISTINCT ORDER_ID)) AS AVERAGE_ORDER_VALUE FROM PIZZA;
/* Q-3 Total Pizzas Sold */
SELECT SUM(QUANTITY) AS TOTAL_PIZZAS_SOLD FROM PIZZA;  /* Answer is ok */
SELECT SUM(quantity) AS TOTAL_PIZZAS_SOLD FROM PIZZA;
/* Q-4 Total Orders */
SELECT COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS FROM PIZZA; /* Answer is ok */
SELECT COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS FROM PIZZA;
/* Q-5 Average Pizza Per Order */
SELECT PIZZA_NAME, AVG(QUANTITY) AS AVERAGE_PIZZA_PER_ORDER FROM PIZZA GROUP BY PIZZA_NAME; /* Answer is ok */ 
SELECT CAST(CAST(SUM(QUANTITY) AS DECIMAL(10,2)) / CAST(COUNT(DISTINCT ORDER_ID) AS DECIMAL(10,2)) AS DECIMAL(10,2))
AS AVERAGE_PIZZAS_PER_ORDER FROM PIZZA;
/* Q-6 Daily Trend for Total Orders */
ALTER TABLE PIZZA
ADD COLUMN DAY_NEW INT;
UPDATE PIZZA
SET DAY_NEW = day(ORDER_DATE);
SELECT PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE, SUM(QUANTITY) AS TOTAL_ORDERS , MAX(DISTINCT DAY_NEW) AS DAILY_TREND FROM PIZZA 
GROUP BY PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE ORDER BY TOTAL_ORDERS, DAILY_TREND;	 /* Answer is ok */
SELECT PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE, SUM(QUANTITY) AS TOTAL_ORDERS , AVG(DISTINCT DAY_NEW) AS DAILY_TREND FROM PIZZA 
GROUP BY PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE ORDER BY TOTAL_ORDERS, DAILY_TREND; /* Answer is ok */
SELECT PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE, SUM(QUANTITY) AS TOTAL_ORDERS , AVG(DAY_NEW) AS DAILY_TREND FROM PIZZA 
GROUP BY PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE ORDER BY TOTAL_ORDERS, DAILY_TREND; /* Answer is ok */

SELECT dayname('1/1/2015') AS order_day, COUNT(DISTINCT order_id) AS total_orders 
FROM PIZZA
GROUP BY dayname('1/1/2015');
select DATENAME(MONTH, order_date) as Month_Name, COUNT(DISTINCT order_id) as Total_Orders
from PIZZA
GROUP BY DATENAME(MONTH, order_date);
/* Q-7 Monthly Trend for Orders */
ALTER TABLE PIZZA
ADD COLUMN MONTH_NEW INT;
UPDATE PIZZA
SET MONTH_NEW = month(ORDER_DATE);
SELECT PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE, MAX(DISTINCT MONTH_NEW) AS MONTHLY_TREND FROM PIZZA 
GROUP BY PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE ORDER BY MONTHLY_TREND; /* Answer is ok */
SELECT PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE, AVG(DISTINCT MONTH_NEW) AS MONTHLY_TREND FROM PIZZA 
GROUP BY PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE ORDER BY MONTHLY_TREND; /* Answer is ok */
SELECT PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE, AVG(MONTH_NEW) AS MONTHLY_TREND FROM PIZZA 
GROUP BY PIZZA_NAME, PIZZA_CATEGORY, PIZZA_SIZE ORDER BY MONTHLY_TREND; /* Answer is ok */
/* Q-8 Percentage of Sales by Pizza Category */
 SELECT ORDER_ID, PIZZA_ID, PIZZA_NAME_ID, QUANTITY, PIZZA_SIZE, PIZZA_SIZE, PIZZA_INGREDIENTS, PIZZA_NAME, PERCENT_RANK() OVER(PARTITION BY TOTAL_PRICE ORDER BY
 PIZZA_CATEGORY ASC) AS 'PERCENTILE_OF_SALES' FROM PIZZA;
SELECT (SUM(TOTAL_PRICE)/(SELECT SUM(TOTAL_PRICE) FROM PIZZA) * 100) AS PERCENTAGE_OF_SALES, PIZZA_CATEGORY FROM PIZZA GROUP BY PIZZA_CATEGORY; /* Answer is ok */
SELECT PIZZA_CATEGORY, CAST(SUM(TOTAL_PRICE) AS DECIMAL(10,2)) AS TOTAL_REVENUE, CAST(SUM(TOTAL_PRICE) * 100 / (SELECT SUM(TOTAL_PRICE) from PIZZA) AS DECIMAL(10,2)) AS PCT
FROM PIZZA GROUP BY PIZZA_CATEGORY;
/* Q-9 Percentage of Sales by Pizza Size */
 SELECT ORDER_ID, PIZZA_ID, PIZZA_NAME_ID, QUANTITY, PIZZA_SIZE, PIZZA_CATEGORY, PIZZA_INGREDIENTS, PIZZA_NAME, PERCENT_RANK() OVER(PARTITION BY TOTAL_PRICE ORDER BY
 PIZZA_SIZE ASC) AS 'PERCENTILE_OF_SALES' FROM PIZZA; 
SELECT (SUM(TOTAL_PRICE)/(SELECT SUM(TOTAL_PRICE) FROM PIZZA) * 100) AS PERCENTAGE_OF_SALES, PIZZA_SIZE FROM PIZZA GROUP BY PIZZA_SIZE; /* Answer is ok */
SELECT PIZZA_SIZE, CAST(SUM(TOTAL_PRICE) AS DECIMAL(10,2)) as TOTAL_REVENUE, CAST(SUM(TOTAL_PRICE) * 100 / (SELECT SUM(TOTAL_PRICE) from PIZZA) AS DECIMAL(10,2)) AS PCT
FROM PIZZA GROUP BY PIZZA_SIZE ORDER BY PIZZA_SIZE;
/* Q-10 Total Pizzas Sold by Pizza Category */
SELECT PIZZA_CATEGORY, SUM(QUANTITY) AS TOTAL_PIZZAS_SOLD FROM PIZZA GROUP BY PIZZA_CATEGORY; /* Answer is ok */
SELECT PIZZA_CATEGORY, SUM(QUANTITY) AS TOTAL_QUANTITY_SOLD FROM PIZZA WHERE MONTH(ORDER_DATE) = 2 GROUP BY PIZZA_CATEGORY ORDER BY TOTAL_QUANTITY_SOLD DESC;
/* Q-11 Top 5 Pizzas by Revenue */
SELECT PIZZA_NAME, SUM(TOTAL_PRICE) AS REVENUE FROM PIZZA GROUP BY PIZZA_NAME ORDER BY REVENUE LIMIT 5; /* Answer is ok */
SELECT PIZZA_NAME, SUM(TOTAL_PRICE) AS TOTAL_REVENUE FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOTAL_REVENUE DESC LIMIT 5;
/* Q-12 Bottom 5 Pizzas by Revenue */
SELECT PIZZA_NAME, SUM(TOTAL_PRICE) AS REVENUE FROM PIZZA GROUP BY PIZZA_NAME ORDER BY REVENUE DESC LIMIT 5; /* Answer is ok */
SELECT PIZZA_NAME, SUM(TOTAL_PRICE) AS TOTAL_REVENUE FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOTAL_REVENUE ASC LIMIT 5;
/* Q-13 Top 5 Pizzas by Quantity */
SELECT PIZZA_NAME, SUM(QUANTITY) AS QUANTITY FROM PIZZA GROUP BY PIZZA_NAME ORDER BY QUANTITY DESC LIMIT 5; 
SELECT PIZZA_NAME, SUM(TOTAL_PRICE) AS TOTAL_PIZZAS_SOLD FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOTAL_PIZZAS_SOLD DESC LIMIT 5; /* Answer is ok */
/* Q-14 Bottom 5 Pizzas by Quantity */
SELECT PIZZA_NAME, QUANTITY FROM PIZZA ORDER BY QUANTITY DESC LIMIT 5; /* Answer is ok */
SELECT PIZZA_NAME, SUM(TOTAL_PRICE) AS TOTAL_PIZZA_SOLD FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOTAL_PIZZA_SOLD ASC LIMIT 5;
/* Q-15 Top 5 Pizza by Total Orders */
SELECT PIZZA_NAME, SUM(ORDER_ID) AS TOP_5_PIZZA FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOP_5_PIZZA LIMIT 5; /* Answer is ok */
SELECT PIZZA_NAME, COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOTAL_ORDERS DESC limit 5;
/* Q-16 Bottom 5 Pizzas by Total Orders */ 
SELECT SUM(ORDER_ID) AS BOTTOM_5_PIZZA FROM PIZZA GROUP BY ORDER_ID ORDER BY BOTTOM_5_PIZZA DESC LIMIT 5; 
SELECT PIZZA_NAME, COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS FROM PIZZA GROUP BY PIZZA_NAME ORDER BY TOTAL_ORDERS ASC LIMIT 5; /* Answer is ok */








